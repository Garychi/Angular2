{"version":3,"sources":["core/src/component/dynamic-form-control.component.ts"],"names":[],"mappings":"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","file":"dynamic-form-control.component.js","sourcesContent":["import {EventEmitter, TemplateRef, OnInit, OnDestroy} from \"@angular/core\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {Subscription} from \"rxjs/Subscription\";\nimport {DynamicFormControlModel} from \"../model/dynamic-form-control.model\";\nimport {DynamicFormValueControlModel, DynamicFormControlValue} from \"../model/dynamic-form-value-control.model\";\nimport {DynamicFormControlRelationGroup} from \"../model/dynamic-form-control-relation.model\";\nimport {\n    DynamicInputModel,\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n    DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE\n} from \"../model/input/dynamic-input.model\";\nimport {DynamicFormRelationService} from \"../service/dynamic-form-relation.service\";\nimport {isDefined} from \"../utils\";\n\nexport interface DynamicFormControlEvent {\n\n    $event: Event | FocusEvent | any;\n    control: FormControl;\n    model: DynamicFormControlModel;\n}\n\nexport abstract class DynamicFormControlComponent implements OnInit, OnDestroy {\n\n    bindId: boolean;\n    blur: EventEmitter<DynamicFormControlEvent>;\n    change: EventEmitter<DynamicFormControlEvent>;\n    control: FormControl;\n    controlGroup: FormGroup;\n    customTemplate: TemplateRef<any>;\n    focus: EventEmitter<DynamicFormControlEvent>;\n    hasErrorMessaging: boolean = false;\n    hasFocus: boolean;\n    model: DynamicFormControlModel;\n    nestedTemplate: TemplateRef<any>;\n\n    private subscriptions: Array<Subscription> = [];\n\n    abstract readonly type: string;\n\n    constructor(private relationService: DynamicFormRelationService) {}\n\n    ngOnInit() {\n\n        if (!isDefined(this.model) || !isDefined(this.controlGroup)) {\n            throw new Error(`no [model] or [controlGroup] property binding defined for DynamicFormControlComponent`);\n        }\n\n        this.control = <FormControl> this.controlGroup.get(this.model.id);\n\n        this.subscriptions.push(this.control.valueChanges.subscribe(this.onControlValueChanges.bind(this)));\n        this.subscriptions.push(this.model.disabledUpdates.subscribe(this.onModelDisabledUpdates.bind(this)));\n\n        if (this.model instanceof DynamicFormValueControlModel) {\n\n            let model = <DynamicFormValueControlModel<DynamicFormControlValue>> this.model;\n\n            this.subscriptions.push(model.valueUpdates.subscribe(this.onModelValueUpdates.bind(this)));\n        }\n\n        if (this.model.relation.length > 0) {\n            this.setControlRelations();\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    get errorMessages(): Array<string> {\n\n        let messages = [];\n\n        if (isDefined(this.model[\"errorMessages\"])) {\n\n            for (let validatorName in this.control.errors) {\n\n                let message;\n\n                if (validatorName === \"minlength\" || validatorName === \"maxlength\") {\n                    validatorName = validatorName.replace(\"length\", \"Length\");\n                }\n\n                if (this.model[\"errorMessages\"][validatorName]) {\n\n                    message = this.model[\"errorMessages\"][validatorName].replace(/\\{\\{(.+?)\\}\\}/mg,\n                        (match, propertyName) => this.model[propertyName] ? this.model[propertyName] : null);\n\n                } else {\n                    message = `Error on \"${validatorName}\" validation`;\n                }\n\n                messages.push(message);\n            }\n        }\n\n        return messages;\n    }\n\n    get isValid(): boolean {\n        return this.control.valid;\n    }\n\n    get isInvalid(): boolean {\n        return this.control.touched && this.control.invalid;\n    }\n\n    setControlRelations(): void {\n\n        let relActivation = this.relationService.findActivationRelation(this.model.relation);\n\n        if (relActivation) {\n\n            this.updateModelDisabled(relActivation);\n\n            this.relationService.getRelatedFormControls(this.model, this.controlGroup).forEach(control => {\n\n                this.subscriptions.push(control.valueChanges.subscribe(() => this.updateModelDisabled(relActivation)));\n                this.subscriptions.push(control.statusChanges.subscribe(() => this.updateModelDisabled(relActivation)));\n            });\n        }\n    }\n\n    updateModelDisabled(relation: DynamicFormControlRelationGroup): void {\n\n        this.model.disabledUpdates.next(this.relationService.isFormControlToBeDisabled(relation, this.controlGroup));\n    }\n\n    onControlValueChanges(value: DynamicFormControlValue): void {\n\n        if (this.model instanceof DynamicFormValueControlModel) {\n\n            let model = <DynamicFormValueControlModel<DynamicFormControlValue>> this.model;\n\n            if (model.value !== value) {\n                model.valueUpdates.next(value);\n            }\n        }\n    }\n\n    onModelValueUpdates(value: DynamicFormControlValue): void {\n\n        if (this.control.value !== value) {\n            this.control.setValue(value);\n        }\n    }\n\n    onModelDisabledUpdates(value: boolean): void {\n        value ? this.control.disable() : this.control.enable();\n    }\n\n    onValueChange($event: Event |  DynamicFormControlEvent): void {\n\n        if ($event instanceof Event) { // native HTML5 change event\n\n            $event.stopImmediatePropagation();\n\n            if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {\n\n                let model = <DynamicInputModel> this.model;\n\n                if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {\n                    model.files = $event.srcElement[\"files\"];\n                }\n            }\n\n            this.change.emit({$event: $event as Event, control: this.control, model: this.model});\n\n        } else if ($event.hasOwnProperty(\"source\") || $event.hasOwnProperty(\"originalEvent\")) { // Material 2 and PrimeNG change event\n\n            this.change.emit({$event: $event, control: this.control, model: this.model});\n\n        } else {\n\n            this.change.emit($event as DynamicFormControlEvent);\n        }\n    }\n\n    onFocusChange($event: FocusEvent | DynamicFormControlEvent): void {\n\n        if ($event instanceof FocusEvent) {\n\n            $event.stopImmediatePropagation();\n\n            this.hasFocus = $event.type === \"focus\";\n\n            this[$event.type].emit({$event: $event, control: this.control, model: this.model});\n\n        } else {\n            this[(<FocusEvent> (<DynamicFormControlEvent> $event).$event).type].emit($event);\n        }\n    }\n}"]}