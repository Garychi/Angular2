{"version":3,"sources":["core/src/model/dynamic-form-value-control.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wCAAqC;AACrC,2EAKsC;AACtC,8EAAiE;AACjE,kCAA6C;AAe7C;IAA8D,gDAAuB;IAWjF,sCAAY,MAA6C,EAAE,GAAe;QAA1E,YAEI,kBAAM,MAAM,EAAE,GAAG,CAAC,SAYrB;QAVG,KAAI,CAAC,eAAe,GAAG,gBAAQ,CAAC,MAAM,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACjE,KAAI,CAAC,aAAa,GAAG,gBAAQ,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QAC7D,KAAI,CAAC,IAAI,GAAG,gBAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,QAAQ,GAAG,gBAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QACpD,KAAI,CAAC,QAAQ,GAAG,gBAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACnD,KAAI,CAAC,UAAU,GAAG,gBAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QACvD,KAAI,CAAC,MAAM,GAAG,gBAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAE9C,KAAI,CAAC,YAAY,GAAG,IAAI,iBAAO,EAAK,CAAC;QACrC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAQ,IAAK,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;;IAClE,CAAC;IAED,sBAAI,+CAAK;aAIT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAND,UAAU,KAAQ;YACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAAA;IAMD,sBAAI,0DAAgB;aAApB;YACI,MAAM,CAAC,iBAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzC,CAAC;;;OAAA;IACL,mCAAC;AAAD,CAtCA,AAsCC,CAtC6D,oDAAuB,GAsCpF;AApCmB;IAAf,qCAAY,EAAE;;qEAA8C;AAC7C;IAAf,qCAAY,EAAE;;mEAA4C;AAC3C;IAAf,qCAAY,EAAE;;0DAAqB;AACpB;IAAf,qCAAY,EAAE;;8DAAmB;AAClB;IAAf,qCAAY,EAAE;;8DAAyB;AACxB;IAAf,qCAAY,EAAE;;gEAAyC;AACjC;IAAtB,qCAAY,CAAC,OAAO,CAAC;;4DAAkB;AARtB,oEAA4B","file":"dynamic-form-value-control.model.js","sourcesContent":["import {Subject} from \"rxjs/Subject\";\nimport {\n    DynamicFormControlModel,\n    DynamicFormControlModelConfig,\n    DynamicValidatorsMap,\n    ClsConfig\n} from \"./dynamic-form-control.model\";\nimport {serializable} from \"../decorator/serializable.decorator\";\nimport {getValue, isDefined} from \"../utils\";\n\nexport type DynamicFormControlValue = boolean | number | string | Array<boolean | number | string>;\n\nexport interface DynamicFormValueControlModelConfig<T> extends DynamicFormControlModelConfig {\n\n    asyncValidators?: DynamicValidatorsMap;\n    errorMessages?: DynamicValidatorsMap;\n    hint?: string;\n    required?: boolean;\n    tabIndex?: number;\n    validators?: DynamicValidatorsMap;\n    value?: T;\n}\n\nexport abstract class DynamicFormValueControlModel<T> extends DynamicFormControlModel {\n\n    @serializable() asyncValidators: DynamicValidatorsMap | null;\n    @serializable() errorMessages: DynamicValidatorsMap | null;\n    @serializable() hint: string | null;\n    @serializable() required: boolean;\n    @serializable() tabIndex: number | null;\n    @serializable() validators: DynamicValidatorsMap | null;\n    @serializable(\"value\") _value: T | null;\n    valueUpdates: Subject<T>;\n\n    constructor(config: DynamicFormValueControlModelConfig<T>, cls?: ClsConfig) {\n\n        super(config, cls);\n\n        this.asyncValidators = getValue(config, \"asyncValidators\", null);\n        this.errorMessages = getValue(config, \"errorMessages\", null);\n        this.hint = getValue(config, \"hint\", null);\n        this.required = getValue(config, \"required\", false);\n        this.tabIndex = getValue(config, \"tabIndex\", null);\n        this.validators = getValue(config, \"validators\", null);\n        this._value = getValue(config, \"value\", null);\n\n        this.valueUpdates = new Subject<T>();\n        this.valueUpdates.subscribe((value: T) => this.value = value);\n    }\n\n    set value(value: T) {\n        this._value = value;\n    }\n\n    get value(): T {\n        return this._value;\n    }\n\n    get hasErrorMessages(): boolean {\n        return isDefined(this.errorMessages);\n    }\n}"]}