import { ClsConfig } from "./dynamic-form-control.model";
import { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from "./dynamic-form-value-control.model";
export interface DynamicFormOptionConfig<T> {
    disabled?: boolean;
    label?: string;
    value: T;
}
export declare class DynamicFormOption<T> {
    disabled: boolean;
    label: string | null;
    value: T;
    constructor(config: DynamicFormOptionConfig<T>);
    text: string;
    toJSON(): Object;
}
export interface DynamicOptionControlModelConfig<T> extends DynamicFormValueControlModelConfig<T | Array<T>> {
    options?: Array<DynamicFormOptionConfig<T>>;
}
export declare abstract class DynamicOptionControlModel<T> extends DynamicFormValueControlModel<T | Array<T>> {
    options: Array<DynamicFormOption<T>>;
    constructor(config: DynamicOptionControlModelConfig<T>, cls?: ClsConfig);
    add(optionConfig: DynamicFormOptionConfig<T>): DynamicFormOption<T>;
    get(index: number): DynamicFormOption<T>;
    insert(index: number, optionConfig: DynamicFormOptionConfig<T>): DynamicFormOption<T>;
    remove(...indices: Array<number>): void;
    abstract select(...indices: Array<number>): void;
}
