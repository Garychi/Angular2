import { DynamicFormControlModel, DynamicFormControlModelConfig, DynamicValidatorsMap, ClsConfig } from "../dynamic-form-control.model";
import { DynamicFormValueControlModel, DynamicFormControlValue } from "../dynamic-form-value-control.model";
export declare class DynamicFormArrayGroupModel {
    context: DynamicFormArrayModel;
    group: Array<DynamicFormValueControlModel<any>>;
    index: number | null;
    constructor(context: DynamicFormArrayModel, group?: Array<DynamicFormValueControlModel<DynamicFormControlValue>>, index?: number | null);
    toJSON(): Object;
}
export declare const DYNAMIC_FORM_CONTROL_TYPE_ARRAY = "ARRAY";
export interface DynamicFormArrayModelConfig extends DynamicFormControlModelConfig {
    asyncValidator?: DynamicValidatorsMap;
    createGroup?: () => Array<DynamicFormValueControlModel<DynamicFormControlValue>>;
    groups?: Array<DynamicFormArrayGroupModel>;
    initialCount?: number;
    validator?: DynamicValidatorsMap;
}
export declare class DynamicFormArrayModel extends DynamicFormControlModel {
    private groups;
    private originGroup;
    asyncValidator: DynamicValidatorsMap | null;
    createGroup: () => Array<DynamicFormValueControlModel<DynamicFormControlValue>>;
    initialCount: number;
    validator: DynamicValidatorsMap | null;
    readonly type: string;
    constructor(config: DynamicFormArrayModelConfig, cls?: ClsConfig);
    readonly size: number;
    private updateGroupIndex();
    addGroup(): DynamicFormArrayGroupModel;
    insertGroup(index: number): DynamicFormArrayGroupModel;
    removeGroup(index: number): void;
    get(index: number): DynamicFormArrayGroupModel;
}
