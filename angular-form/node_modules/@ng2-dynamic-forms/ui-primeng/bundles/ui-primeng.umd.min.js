/*!
ng2-dynamic-forms 1.3.2 2016-12-17 10:00 UTC
Copyright (c) 2016, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/forms"),require("@ng2-dynamic-forms/core"),require("@angular/common"),require("primeng/components/checkbox/checkbox"),require("primeng/components/dropdown/dropdown"),require("primeng/components/inputswitch/inputswitch"),require("primeng/components/inputtext/inputtext"),require("primeng/components/inputtextarea/inputtextarea"),require("primeng/components/multiselect/multiselect"),require("primeng/components/radiobutton/radiobutton"),require("primeng/components/slider/slider"),require("primeng/components/spinner/spinner")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@ng2-dynamic-forms/core","@angular/common","primeng/components/checkbox/checkbox","primeng/components/dropdown/dropdown","primeng/components/inputswitch/inputswitch","primeng/components/inputtext/inputtext","primeng/components/inputtextarea/inputtextarea","primeng/components/multiselect/multiselect","primeng/components/radiobutton/radiobutton","primeng/components/slider/slider","primeng/components/spinner/spinner"],o):o((e.ng2DF=e.ng2DF||{},e.ng2DF.uiPrimeng=e.ng2DF.uiPrimeng||{}),e.ng.core,e.ng.forms,e.ng2DF.core,e.ng.common,e.primeng/components/checkbox/checkbox,e.primeng/components/dropdown/dropdown,e.primeng/components/inputswitch/inputswitch,e.primeng/components/inputtext/inputtext,e.primeng/components/inputtextarea/inputtextarea,e.primeng/components/multiselect/multiselect,e.primeng/components/radiobutton/radiobutton,e.primeng/components/slider/slider,e.primeng/components/spinner/spinner)}(this,function(e,o,n,t,l,m,d,r,i,a,p,c,s,u){"use strict";var g=window&&window.__extends||function(e,o){function n(){this.constructor=e}for(var t in o)o.hasOwnProperty(t)&&(e[t]=o[t]);e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)},f=window&&window.__decorate||function(e,o,n,t){var l,m=arguments.length,d=m<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,o,n,t);else for(var r=e.length-1;r>=0;r--)(l=e[r])&&(d=(m<3?l(d):m>3?l(o,n,d):l(o,n))||d);return m>3&&d&&Object.defineProperty(o,n,d),d},y=window&&window.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},C="PRIME_NG";e.DynamicFormPrimeNGComponent=function(e){function n(n){var t=e.call(this,n)||this;return t.bindId=!0,t.blur=new o.EventEmitter,t.change=new o.EventEmitter,t.focus=new o.EventEmitter,t.type=C,t}return g(n,e),n}(t.DynamicFormControlComponent),f([o.Input(),y("design:type",Boolean)],e.DynamicFormPrimeNGComponent.prototype,"bindId",void 0),f([o.Input(),y("design:type",n.FormGroup)],e.DynamicFormPrimeNGComponent.prototype,"controlGroup",void 0),f([o.Input(),y("design:type",t.DynamicFormControlModel)],e.DynamicFormPrimeNGComponent.prototype,"model",void 0),f([o.Input(),y("design:type",o.TemplateRef)],e.DynamicFormPrimeNGComponent.prototype,"nestedTemplate",void 0),f([o.Output(),y("design:type",o.EventEmitter)],e.DynamicFormPrimeNGComponent.prototype,"blur",void 0),f([o.Output(),y("design:type",o.EventEmitter)],e.DynamicFormPrimeNGComponent.prototype,"change",void 0),f([o.Output(),y("design:type",o.EventEmitter)],e.DynamicFormPrimeNGComponent.prototype,"focus",void 0),f([o.ContentChild(o.TemplateRef),y("design:type",Object)],e.DynamicFormPrimeNGComponent.prototype,"customTemplate",void 0),e.DynamicFormPrimeNGComponent=f([o.Component({selector:"dynamic-form-primeng-control",template:'<div [formGroup]="controlGroup" [ngClass]="model.cls.element.container"><fieldset *ngIf="model.type === \'RADIO_GROUP\'" role="radiogroup" [attr.tabindex]="model.tabIndex" [dynamicId]="bindId && model.id" [name]="model.name" (change)="onValueChange($event)"><legend *ngIf="model.legend" [innerHTML]="model.legend"></legend><div *ngFor="let option of model.options" [ngClass]="model.cls.grid.container"><div [ngClass]="model.cls.grid.control"><p-radioButton [formControlName]="model.id" [name]="model.name" [(ngModel)]="model.value" [value]="option.value"></p-radioButton></div><div [ngClass]="model.cls.grid.label"><label [attr.for]="model.id" [innerHTML]="option.label" [ngClass]="model.cls.element.label"></label></div></div></fieldset><div *ngIf="!(model.type === \'RADIO_GROUP\')" [ngClass]="model.cls.grid.container"><div *ngIf="!(model.type === \'CHECKBOX\') && model.label" [ngClass]="model.cls.grid.label"><label [attr.for]="model.id" [innerHTML]="model.label" [ngClass]="model.cls.element.label"></label></div><div [ngClass]="model.cls.grid.control"><fieldset *ngIf="model.type === \'GROUP\' || model.type === \'CHECKBOX_GROUP\'" [dynamicId]="bindId && model.id" [formGroupName]="model.id" [name]="model.name" [ngClass]="model.cls.element.control"><legend *ngIf="model.legend" [innerHTML]="model.legend"></legend><dynamic-form-primeng-control *ngFor="let controlModel of model.group" [controlGroup]="control" [model]="controlModel" [nestedTemplate]="customTemplate" (blur)="onFocusChange($event)" (change)="onValueChange($event)" (focus)="onFocusChange($event)"></dynamic-form-primeng-control></fieldset><div *ngIf="model.type === \'ARRAY\'" [dynamicId]="bindId && model.id" [formArrayName]="model.id" [ngClass]="model.cls.element.control"><fieldset *ngFor="let groupModel of model.groups; let idx = index" [formGroupName]="idx"><dynamic-form-primeng-control *ngFor="let controlModel of groupModel.group" [bindId]="false" [controlGroup]="control.at(idx)" [model]="controlModel" [nestedTemplate]="nestedTemplate" (blur)="onFocusChange($event)" (change)="onValueChange($event)" (focus)="onFocusChange($event)"></dynamic-form-primeng-control><template [ngTemplateOutlet]="customTemplate || nestedTemplate" [ngOutletContext]="groupModel"></template></fieldset></div><input *ngIf="model.type === \'INPUT\'" pInputText [attr.accept]="model.accept" [attr.autoComplete]="model.autoComplete" [attr.list]="model.listId" [attr.max]="model.max" [attr.min]="model.min" [attr.multiple]="model.multiple" [attr.step]="model.step" [attr.tabindex]="model.tabIndex" [autofocus]="model.autoFocus" [dynamicId]="bindId && model.id" [formControlName]="model.id" [maxlength]="model.maxLength" [minlength]="model.minLength" [name]="model.name" [ngClass]="model.cls.element.control" [pattern]="model.pattern" [placeholder]="model.placeholder" [readonly]="model.readOnly" [required]="model.required" [spellcheck]="model.spellCheck" [type]="model.inputType" (blur)="onFocusChange($event)" (change)="onValueChange($event)" (focus)="onFocusChange($event)"><datalist *ngIf="model.list" [id]="model.listId"><option *ngFor="let option of model.list" [value]="option"></option></datalist><p-checkbox *ngIf="model.type === \'CHECKBOX\'" binary="true" [dynamicId]="bindId && model.id" [formControlName]="model.id" [name]="model.name" [ngClass]="model.cls.element.control" [value]="model.value"></p-checkbox><p-dropdown *ngIf="model.type === \'SELECT\' && !model.multiple" [dynamicId]="bindId && model.id" [formControlName]="model.id" [options]="model.options" (onChange)="onValueChange($event)"></p-dropdown><p-multiSelect *ngIf="model.type === \'SELECT\' && model.multiple" [dynamicId]="bindId && model.id" [formControlName]="model.id" [options]="model.options" (onChange)="onValueChange($event)"></p-multiSelect><p-slider *ngIf="model.type === \'SLIDER\'" [dynamicId]="bindId && model.id" [min]="model.min" [max]="model.max" [step]="model.step" [formControlName]="model.id"></p-slider><p-inputSwitch *ngIf="model.type === \'SWITCH\'" [dynamicId]="bindId && model.id" [formControlName]="model.id" [onLabel]="model.onLabel" [offLabel]="model.offLabel" (onChange)="onValueChange($event)"></p-inputSwitch><textarea *ngIf="model.type === \'TEXTAREA\'" pInputTextarea [attr.tabindex]="model.tabIndex" [cols]="model.cols" [dynamicId]="bindId && model.id" [formControlName]="model.id" [maxlength]="model.maxLength" [minlength]="model.minLength" [name]="model.name" [ngClass]="model.cls.element.control" [placeholder]="model.placeholder" [readonly]="model.readOnly" [required]="model.required" [rows]="model.rows" [spellcheck]="model.spellCheck" [wrap]="model.wrap" (blur)="onFocusChange($event)" (change)="onValueChange($event)" (focus)="onFocusChange($event)"></textarea></div><div *ngIf="model.type === \'CHECKBOX\'" [ngClass]="model.cls.grid.label"><label [attr.for]="model.id" [innerHTML]="model.label" [ngClass]="model.cls.element.label"></label></div></div></div>'}),y("design:paramtypes",[t.DynamicFormRelationService])],e.DynamicFormPrimeNGComponent);var b=window&&window.__decorate||function(e,o,n,t){var l,m=arguments.length,d=m<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,o,n,t);else for(var r=e.length-1;r>=0;r--)(l=e[r])&&(d=(m<3?l(d):m>3?l(o,n,d):l(o,n))||d);return m>3&&d&&Object.defineProperty(o,n,d),d},h=window&&window.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)};e.DynamicFormsPrimeNGUIModule=function(){function e(){}return e}(),e.DynamicFormsPrimeNGUIModule=b([o.NgModule({imports:[l.CommonModule,n.ReactiveFormsModule,t.DynamicFormsCoreModule,m.CheckboxModule,d.DropdownModule,r.InputSwitchModule,i.InputTextModule,a.InputTextareaModule,p.MultiSelectModule,c.RadioButtonModule,s.SliderModule,u.SpinnerModule],declarations:[e.DynamicFormPrimeNGComponent],exports:[t.DynamicFormsCoreModule,e.DynamicFormPrimeNGComponent]}),h("design:paramtypes",[])],e.DynamicFormsPrimeNGUIModule),e.DYNAMIC_FORM_UI_PRIME_NG=C,Object.defineProperty(e,"__esModule",{value:!0})});
